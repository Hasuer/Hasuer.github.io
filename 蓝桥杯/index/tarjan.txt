#include<bits/stdc++.h>
using namespace std;
struct edge {
	int u,v,next;
} e[200010];
int n,m,idx,cnt,tot,a,b;
int head[100010],dfn[100010],low[100010],parent[100010];
bool cut[100010];
void add (int u,int v) {
	e[++cnt].v=v;
	e[cnt].u = u;
	e[cnt].next=head[u];
	head[u]=cnt;
}
void tarjan (int u,int fa) {
	dfn[u]=low[u]=++idx; // 这里是++idx因为dfn从1开始
	int child=0;
	for (int i=head[u]; i!=0; i=e[i].next) {
		int v=e[i].v;
		if (!dfn[v]) {
			tarjan (v,u);
			low[u]=min (low[u],low[v]);
			if (low[v]>=dfn[u]&&u!=fa)
				cut[u]=1;
			if(u==fa)
				child++;
		}
		if(v != fa) {
			low[u]=min (low[u],dfn[v]);
		}

	}
	if (child>=2&&u==fa)
		cut[u]=1;
}
int main() {
	cin >> n >> m;
	for (int i=1; i<=m; i++) {
		cin >> a >> b;
		add (a,b);
		add (b,a);
	}
	for (int i=1; i<=n; i++)
		if (dfn[i]==0)
			tarjan (i,i);
	for (int i=1; i<=n; i++)
		if (cut[i])
			tot++;
	printf ("%d\n",tot);
	// 打印所有割点
	for (int i=1; i<=n; i++)
		if (cut[i])
			printf ("%d ",i);
	cout <<endl;
	// 打印所有割边
	for (int v=1; v<=n; v++){
		int u = parent[v];
		if(u != v){
			if(low[v] > dfn[u]){
				cout << u << " " << v <<endl;
			}
		}
	}
	return 0;
}